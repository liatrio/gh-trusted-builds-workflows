on:
  workflow_dispatch:
  workflow_call:
    outputs:
      digest:
        description: "Docker image digest"
        value: ${{ jobs.push.outputs.digest }}

env:
  AZURE_CLIENT_ID: "48fbd2e1-8375-4c05-9957-f5c6c702181f"
  AZURE_TENANT_ID: "1b4a4fed-fed8-4823-a8a0-3d5cea83d122"
  AZURE_SUBSCRIPTION_ID: "3e16852e-8399-4c16-b246-16bf46bc3747"
  ACR_NAME: "agplatformrnim"
  CUSTOM_ATTESTOR_VERSION: "0.1.0"
  REKOR_HOST: "rekor-ham0vei9.ngrok.io"
  FULCIO_HOST: "fulcio-ham0vei9.ngrok.io"
  TUF_ROOT_MIRROR: "https://agtufrootcrml.blob.core.windows.net/tuf-root"

jobs:
  build:
    permissions:
      id-token: none
      contents: read
    runs-on: ubuntu-latest
    outputs:
      tags: ${{ steps.meta.outputs.tags }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Image Metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.ACR_NAME }}.azurecr.io/${{ github.repository }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,prefix=
            latest

      - name: Build Image
        uses: docker/build-push-action@v4
        id: build
        with:
          context: .
          push: false
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          outputs: type=docker,dest=/tmp/image.tar

      - name: Upload Image Archive
        uses: actions/upload-artifact@v3
        with:
          name: image
          path: /tmp/image.tar

  push:
    permissions:
      id-token: write
      contents: read
    runs-on: ubuntu-latest
    needs: [build]
    outputs:
      digest: ${{ steps.push.outputs.digest }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Azure Login
        uses: azure/login@v1
        with:
          client-id: ${{ env.AZURE_CLIENT_ID }}
          tenant-id: ${{ env.AZURE_TENANT_ID }}
          subscription-id: ${{ env.AZURE_SUBSCRIPTION_ID }}

      - name: Azure Account
        run: az account show

      - name: Authenticate to ACR
        run: az acr login -n "${ACR_NAME}"

      - name: Download Image Archive
        uses: actions/download-artifact@v3
        with:
          name: image
          path: /tmp

      - name: Load & Push Image
        id: push
        run: |
          docker load --input /tmp/image.tar
          image='${{ env.ACR_NAME }}.azurecr.io/${{ github.repository }}'
          docker push -a $image
          digest=$(docker inspect --format='{{index .RepoDigests 0}}' "${image}" | awk -F "${image}@" '{print $2}')
          echo "image digest: ${digest}"
          echo "digest=${digest}" >> $GITHUB_OUTPUT

  provenance:
    permissions:
      actions: read
      id-token: write
      contents: read
    runs-on: ubuntu-latest
    needs: [push]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Azure Login
        uses: azure/login@v1
        with:
          client-id: ${{ env.AZURE_CLIENT_ID }}
          tenant-id: ${{ env.AZURE_TENANT_ID }}
          subscription-id: ${{ env.AZURE_SUBSCRIPTION_ID }}

      - name: Azure Account
        run: |
          az account show

      - name: Authenticate to ACR
        run: az acr login -n "${ACR_NAME}"

      - name: Download SLSA Generator
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release download \
            --repo slsa-framework/slsa-github-generator \
            --pattern slsa-generator-container-linux-amd64

          chmod +x slsa-generator-container-linux-amd64
          sudo mv slsa-generator-container-linux-amd64 /usr/local/bin/slsa-generator-container

          slsa-generator-container version

      - name: Generate Provenance
        env:
          GITHUB_CONTEXT: "${{ toJSON(github) }}"
        run: |
          slsa-generator-container generate --predicate predicate.json

      - name: Install Cosign
        uses: sigstore/cosign-installer@v3
        with:
          cosign-release: 'v2.0.2'

      - name: Initialize Cosign
        run: |
          cosign initialize --mirror ${TUF_ROOT_MIRROR} --root root.json

      - name: Attest Provenance
        run: |
          cosign attest --predicate="predicate.json" \
            --rekor-url "https://${REKOR_HOST}" \
            --type slsaprovenance \
            --fulcio-url "https://${FULCIO_HOST}" \
            --yes \
            ${{ env.ACR_NAME }}.azurecr.io/${{ github.repository }}@${{ needs.push.outputs.digest }}

      - name: Upload Provenance
        uses: actions/upload-artifact@v3
        with:
          name: provenance
          path: predicate.json

  sign:
    permissions:
      id-token: write
      contents: read
    runs-on: ubuntu-latest
    needs: [push]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Azure Login
        uses: azure/login@v1
        with:
          client-id: ${{ env.AZURE_CLIENT_ID }}
          tenant-id: ${{ env.AZURE_TENANT_ID }}
          subscription-id: ${{ env.AZURE_SUBSCRIPTION_ID }}

      - name: Azure Account
        run: |
          az account show

      - name: Authenticate to ACR
        run: az acr login -n "${ACR_NAME}"

      - name: Install Cosign
        uses: sigstore/cosign-installer@v3
        with:
          cosign-release: 'v2.0.2'

      - name: Initialize Cosign
        run: |
          cosign initialize --mirror ${TUF_ROOT_MIRROR} --root root.json

      - name: Sign
        env:
          AZURE_AUTH_METHOD: "cli"
          COSIGN_EXPERIMENTAL: 1
        run: |
          cosign sign \
              --verbose \
              -a liatr.io/built-from=${{ github.repository }} \
              -a liatr.io/built-by='liatrio/gh-trusted-builds-workflows/.github/workflows/build-and-push.yaml' \
              -a liatr.io/github-actions-run-link='${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}' \
              -a liatr.io/signed-off-by=platform-team \
              --output-signature image.sig \
              --rekor-url "https://${REKOR_HOST}" \
              --fulcio-url "https://${FULCIO_HOST}" \
              -y ${{ env.ACR_NAME }}.azurecr.io/${{ github.repository }}@${{ needs.push.outputs.digest }}

      - name: Upload Image Signature
        uses: actions/upload-artifact@v3
        with:
          name: platform.sig
          path: image.sig
