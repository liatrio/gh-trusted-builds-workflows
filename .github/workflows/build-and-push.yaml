on:
  workflow_dispatch:
  workflow_call:
    outputs:
      digest:
        description: "Docker image digest"
        value: ${{ jobs.push.outputs.digest }}

env:
  CUSTOM_ATTESTOR_VERSION: "0.3.1"

jobs:
  metadata:
    permissions:
      id-token: write
      contents: read
    runs-on: ubuntu-latest
    outputs:
      ref: ${{ steps.workflow.outputs.ref }}
    steps:
      - name: Determine Workflow Ref
        id: workflow
        uses: liatrio/gh-trusted-builds-workflows/.github/actions/workflow-ref@main

  source-attestations:
    permissions:
      id-token: write
      contents: read
      pull-requests: read
    runs-on: ubuntu-latest
    needs: [metadata]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Trusted Builds Config
        id: config
        uses: liatrio/gh-trusted-builds-workflows/.github/actions/config@main
        with:
          ref: ${{needs.metadata.outputs.ref}}
          token: ${{ secrets.GH_PAT }}

      - name: Azure Setup
        uses: liatrio/gh-trusted-builds-workflows/.github/actions/azure@main
        with:
          acrName: ${{ steps.config.outputs.ACR_NAME }}
          client: ${{ steps.config.outputs.PLATFORM_TEAM_SP_CLIENT_ID }}
          subscription: ${{ steps.config.outputs.AZURE_SUBSCRIPTION_ID }}
          tenant: ${{ steps.config.outputs.AZURE_TENANT_ID }}

      - name: Tailscale
        uses: liatrio/gh-trusted-builds-workflows/.github/actions/tailscale@main
        with:
          vault: ${{ steps.config.outputs.PLATFORM_TEAM_VAULT }}

      - name: Cosign Setup
        uses: liatrio/gh-trusted-builds-workflows/.github/actions/cosign@main
        with:
          tufRoot: ${{ steps.config.outputs.TUF_ROOT_PATH }}
          tufMirror: ${{ steps.config.outputs.TUF_ROOT_MIRROR }}

      - name: Download Attestor
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
        run: |
          gh release download \
            --repo liatrio/custom-attestations-poc \
            --pattern "custom-attestations-poc_${CUSTOM_ATTESTOR_VERSION}_linux_amd64.tar.gz" "v${CUSTOM_ATTESTOR_VERSION}"
          tar xvf "custom-attestations-poc_${CUSTOM_ATTESTOR_VERSION}_linux_amd64.tar.gz"
          sudo cp ./attestor /usr/local/bin/attestor
          attestor --help

      - name: Pull Request Attestation
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          attestor \
            --attestor "github-pull-request" \
            --rekor-url ${{ steps.config.outputs.REKOR_URL }} \
            --fulcio-url ${{ steps.config.outputs.FULCIO_URL }}

  build:
    permissions:
      id-token: none
      contents: read
    runs-on: ubuntu-latest
    needs: [metadata]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Trusted Builds Config
        id: config
        uses: liatrio/gh-trusted-builds-workflows/.github/actions/config@main
        with:
          ref: ${{ needs.metadata.outputs.ref }}
          token: ${{ secrets.GH_PAT }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Image Metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ steps.config.outputs.ACR_NAME }}.azurecr.io/${{ github.repository }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,prefix=
            latest

      - name: Build Image
        uses: docker/build-push-action@v4
        id: build
        with:
          context: .
          push: false
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          outputs: type=docker,dest=/tmp/image.tar

      - name: Upload Image Archive
        uses: actions/upload-artifact@v3
        with:
          name: image
          path: /tmp/image.tar

  push:
    permissions:
      id-token: write
      contents: read
    runs-on: ubuntu-latest
    needs: [build, metadata]
    outputs:
      digest: ${{ steps.push.outputs.digest }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Trusted Builds Config
        id: config
        uses: liatrio/gh-trusted-builds-workflows/.github/actions/config@main
        with:
          ref: ${{ needs.metadata.outputs.ref }}
          token: ${{ secrets.GH_PAT }}

      - name: Azure Setup
        uses: liatrio/gh-trusted-builds-workflows/.github/actions/azure@main
        with:
          acrName: ${{ steps.config.outputs.ACR_NAME }}
          client: ${{ steps.config.outputs.PLATFORM_TEAM_SP_CLIENT_ID }}
          subscription: ${{ steps.config.outputs.AZURE_SUBSCRIPTION_ID }}
          tenant: ${{ steps.config.outputs.AZURE_TENANT_ID }}

      - name: Download Image Archive
        uses: actions/download-artifact@v3
        with:
          name: image
          path: /tmp

      - name: Load & Push Image
        id: push
        run: |
          docker load --input /tmp/image.tar
          image='${{ steps.config.outputs.ACR_NAME }}.azurecr.io/${{ github.repository }}'
          docker push -a $image
          digest=$(docker inspect --format='{{index .RepoDigests 0}}' "${image}" | awk -F "${image}@" '{print $2}')
          echo "image digest: ${digest}"
          echo "digest=${digest}" >> $GITHUB_OUTPUT

  provenance:
    permissions:
      actions: read
      id-token: write
      contents: read
    runs-on: ubuntu-latest
    needs: [metadata, push]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Trusted Builds Config
        id: config
        uses: liatrio/gh-trusted-builds-workflows/.github/actions/config@main
        with:
          ref: ${{ needs.metadata.outputs.ref }}
          token: ${{ secrets.GH_PAT }}

      - name: Azure Setup
        uses: liatrio/gh-trusted-builds-workflows/.github/actions/azure@main
        with:
          acrName: ${{ steps.config.outputs.ACR_NAME }}
          client: ${{ steps.config.outputs.PLATFORM_TEAM_SP_CLIENT_ID }}
          subscription: ${{ steps.config.outputs.AZURE_SUBSCRIPTION_ID }}
          tenant: ${{ steps.config.outputs.AZURE_TENANT_ID }}

      - name: Tailscale
        uses: liatrio/gh-trusted-builds-workflows/.github/actions/tailscale@main
        with:
          vault: ${{ steps.config.outputs.PLATFORM_TEAM_VAULT }}

      - name: Download SLSA Generator
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release download \
            --repo slsa-framework/slsa-github-generator \
            --pattern slsa-generator-container-linux-amd64

          chmod +x slsa-generator-container-linux-amd64
          sudo mv slsa-generator-container-linux-amd64 /usr/local/bin/slsa-generator-container

          slsa-generator-container version

      - name: Generate Provenance
        env:
          GITHUB_CONTEXT: "${{ toJSON(github) }}"
        run: |
          slsa-generator-container generate --predicate predicate.json

      - name: Cosign Setup
        uses: liatrio/gh-trusted-builds-workflows/.github/actions/cosign@main
        with:
          tufRoot: ${{ steps.config.outputs.TUF_ROOT_PATH }}
          tufMirror: ${{ steps.config.outputs.TUF_ROOT_MIRROR }}

      - name: Attest Provenance
        run: |
          cosign attest --predicate="predicate.json" \
            --rekor-url ${{ steps.config.outputs.REKOR_URL }} \
            --type slsaprovenance \
            --fulcio-url ${{ steps.config.outputs.FULCIO_URL }} \
            --yes \
            ${{ steps.config.outputs.ACR_NAME }}.azurecr.io/${{ github.repository }}@${{ needs.push.outputs.digest }}

      - name: Upload Provenance
        uses: actions/upload-artifact@v3
        with:
          name: provenance
          path: predicate.json

  sign:
    permissions:
      id-token: write
      contents: read
    runs-on: ubuntu-latest
    needs: [push, metadata]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Trusted Builds Config
        id: config
        uses: liatrio/gh-trusted-builds-workflows/.github/actions/config@main
        with:
          ref: ${{ needs.metadata.outputs.ref }}
          token: ${{ secrets.GH_PAT }}

      - name: Azure Setup
        uses: liatrio/gh-trusted-builds-workflows/.github/actions/azure@main
        with:
          acrName: ${{ steps.config.outputs.ACR_NAME }}
          client: ${{ steps.config.outputs.PLATFORM_TEAM_SP_CLIENT_ID }}
          subscription: ${{ steps.config.outputs.AZURE_SUBSCRIPTION_ID }}
          tenant: ${{ steps.config.outputs.AZURE_TENANT_ID }}

      - name: Tailscale
        uses: liatrio/gh-trusted-builds-workflows/.github/actions/tailscale@main
        with:
          vault: ${{ steps.config.outputs.PLATFORM_TEAM_VAULT }}

      - name: Cosign Setup
        uses: liatrio/gh-trusted-builds-workflows/.github/actions/cosign@main
        with:
          tufRoot: ${{ steps.config.outputs.TUF_ROOT_PATH }}
          tufMirror: ${{ steps.config.outputs.TUF_ROOT_MIRROR }}

      - name: Sign
        env:
          COSIGN_EXPERIMENTAL: 1
        run: |
          cosign sign \
              --verbose \
              -a liatr.io/github-actions-run-link='${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}' \
              -a liatr.io/signed-off-by=platform-team \
              --rekor-url ${{ steps.config.outputs.REKOR_URL }} \
              --fulcio-url ${{ steps.config.outputs.FULCIO_URL }} \
              -y ${{ steps.config.outputs.ACR_NAME }}.azurecr.io/${{ github.repository }}@${{ needs.push.outputs.digest }}
