name: Build & Push

on:
  workflow_call:
    inputs:
      attestorVersion:
        description: "liatrio/custom-attestation-poc attestor version"
        default: "0.4.0"
        type: string
      cosignVersion:
        description: "Sigstore cosign version"
        default: "v2.0.2"
        type: string
      fulcioUrl:
        description: "Sigstore Fulcio URL. Defaults to the production public good instance"
        default: "https://fulcio.sigstore.dev"
        type: string
      rekorUrl:
        description: "Sigstore Rekor URL. Defaults to the production public good instance"
        default: "https://rekor.sigstore.dev"
        type: string
      slsaGeneratorVersion:
        description: "SLSA container provenance generator version"
        default: "1.6.0"
        type: string
      tufMirror:
        description: "cosign TUF root mirror URL. If not specified, cosign initialize will not be invoked"
        default: ""
        type: string
      tufRoot:
        description: "cosign TUF initial trusted root. If not specified, cosign initialize will not be invoked"
        default: ""
        type: string
    secrets:
      token:
        description: "GitHub token - used to download release assets"
    outputs:
      digest:
        description: "Docker image digest"
        value: ${{ jobs.push.outputs.digest }}

jobs:
  source-attestations:
    permissions:
      id-token: write
      contents: read
      pull-requests: read
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Cosign Setup
        uses: liatrio/gh-trusted-builds-workflows/.github/actions/cosign@main
        with:
          tufRoot: ${{ inputs.tufRoot }}
          tufMirror: ${{ inputs.tufMirror }}
          version: ${{ inputs.cosignVersion }}

      - name: Download Attestor
        env:
          GITHUB_TOKEN: ${{ secrets.token }}
        run: |
          gh release download \
            --repo liatrio/custom-attestations-poc \
            --pattern "custom-attestations-poc_${{ inputs.attestorVersion }}_linux_amd64.tar.gz" "v${{ inputs.attestorVersion }}"

          tar xvf "custom-attestations-poc_${{ inputs.attestorVersion }}_linux_amd64.tar.gz"
          ./attestor --help

          mkdir -p $HOME/.bin/attestor
          mv ./attestor $HOME/.bin/attestor
          rm -rf custom-attestations-poc_${{ inputs.attestorVersion }}_linux_amd64
          rm "custom-attestations-poc_${{ inputs.attestorVersion }}_linux_amd64.tar.gz"
          echo "$HOME/.bin/attestor" >> $GITHUB_PATH

      - name: Pull Request Attestation
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          attestor \
            --attestor "github-pull-request" \
            --rekor-url ${{ inputs.rekorUrl }} \
            --fulcio-url ${{ inputs.fulcioUrl }}

  build:
    permissions:
      id-token: none
      contents: read
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Image Metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,prefix=
            latest

      - name: Build Image
        uses: docker/build-push-action@v4
        id: build
        with:
          context: .
          push: false
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          outputs: type=docker,dest=/tmp/image.tar

      - name: Upload Image Archive
        uses: actions/upload-artifact@v3
        with:
          name: image
          path: /tmp/image.tar

  push:
    permissions:
      id-token: write
      contents: read
      packages: write
    runs-on: ubuntu-latest
    needs: [build]
    outputs:
      digest: ${{ steps.push.outputs.digest }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Download Image Archive
        uses: actions/download-artifact@v3
        with:
          name: image
          path: /tmp

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Load & Push Image
        id: push
        run: |
          docker load --input /tmp/image.tar
          image='ghcr.io/${{ github.repository }}'
          docker push -a $image
          digest=$(docker inspect --format='{{index .RepoDigests 0}}' "${image}" | awk -F "${image}@" '{print $2}')
          echo "image digest: ${digest}"
          echo "digest=${digest}" >> $GITHUB_OUTPUT

  provenance:
    permissions:
      actions: read
      id-token: write
      contents: read
      packages: write
    runs-on: ubuntu-latest
    needs: [push]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Download SLSA Generator
        env:
          GITHUB_TOKEN: ${{ secrets.token }}
        run: |
          gh release download \
            --repo slsa-framework/slsa-github-generator \
            --pattern slsa-generator-container-linux-amd64 "v${{ inputs.slsaGeneratorVersion }}"

          chmod +x slsa-generator-container-linux-amd64
          ./slsa-generator-container-linux-amd64 --help

          mkdir -p $HOME/.bin/slsa-generator-container
          mv ./slsa-generator-container-linux-amd64 $HOME/.bin/slsa-generator-container/slsa-generator-container
          echo "$HOME/.bin/slsa-generator-container" >> $GITHUB_PATH

      - name: Generate Provenance
        env:
          GITHUB_CONTEXT: "${{ toJSON(github) }}"
        run: |
          slsa-generator-container generate --predicate predicate.json

      - name: Cosign Setup
        uses: liatrio/gh-trusted-builds-workflows/.github/actions/cosign@main
        with:
          tufRoot: ${{ inputs.tufRoot }}
          tufMirror: ${{ inputs.tufMirror }}
          version: ${{ inputs.cosignVersion }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Attest Provenance
        run: |
          cosign attest --predicate="predicate.json" \
            --rekor-url ${{ inputs.rekorUrl }} \
            --type slsaprovenance \
            --fulcio-url ${{ inputs.fulcioUrl }} \
            --yes \
            ghcr.io/${{ github.repository }}@${{ needs.push.outputs.digest }}

  sign:
    permissions:
      id-token: write
      contents: read
      packages: write
    runs-on: ubuntu-latest
    needs: [push]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Cosign Setup
        uses: liatrio/gh-trusted-builds-workflows/.github/actions/cosign@main
        with:
          tufRoot: ${{ inputs.tufRoot }}
          tufMirror: ${{ inputs.tufMirror }}
          version: ${{ inputs.cosignVersion }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Sign
        run: |
          cosign sign \
              --annotations liatr.io/github-actions-run-link='${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}' \
              --annotations liatr.io/signed-off-by=platform-team \
              --rekor-url ${{ inputs.rekorUrl }} \
              --fulcio-url ${{ inputs.fulcioUrl }} \
              --yes ghcr.io/${{ github.repository }}@${{ needs.push.outputs.digest }}
