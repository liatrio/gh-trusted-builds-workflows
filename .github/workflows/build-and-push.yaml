on:
  workflow_dispatch:
  workflow_call:
    outputs:
      digest:
        description: "Docker image digest"
        value: ${{ jobs.build.outputs.digest }}

env:
  AZURE_CLIENT_ID: "48fbd2e1-8375-4c05-9957-f5c6c702181f"
  AZURE_TENANT_ID: "1b4a4fed-fed8-4823-a8a0-3d5cea83d122"
  AZURE_SUBSCRIPTION_ID: "3e16852e-8399-4c16-b246-16bf46bc3747"
  AZURE_KEYVAULT_NAME: "ag-poc-platform-c2wn"
  ACR_NAME: "agplatformrnim"
  IMAGE_URI: "${ACR_NAME}.azurecr.io/${{ github.repository }}"
  REKOR_HOST: "rekor.sec-guild-dev.private.northcentralus.azmk8s.io"
  INGRESS_CA: "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJkakNDQVIyZ0F3SUJBZ0lSQU1wWEY5RERJbGpHVUpaQ2ZvMXVPV2N3Q2dZSUtvWkl6ajBFQXdJd0d6RVoKTUJjR0ExVUVBeE1RYlhrdGMyVnNabk5wWjI1bFpDMWpZVEFlRncweU16QXlNak15TXpVME5EQmFGdzB5TXpBMQpNalF5TXpVME5EQmFNQnN4R1RBWEJnTlZCQU1URUcxNUxYTmxiR1p6YVdkdVpXUXRZMkV3V1RBVEJnY3Foa2pPClBRSUJCZ2dxaGtqT1BRTUJCd05DQUFTaUVFQjd2eUxLOWJaOHN6V1NCc2x1UDVJTlFaMms1OHBtMXJlZEJGNkMKY3BrbXZRRGlPTURrZFU0dzhZenp0UnI1dG9jbHd4MGkrdDNjTk56ZGU4dDdvMEl3UURBT0JnTlZIUThCQWY4RQpCQU1DQXFRd0R3WURWUjBUQVFIL0JBVXdBd0VCL3pBZEJnTlZIUTRFRmdRVXJ5OUI4ZUNnQ2RBUXRnYUsxNThMCk1yTm9xdUl3Q2dZSUtvWkl6ajBFQXdJRFJ3QXdSQUlnS0wxQXVIMXRPTzlZOU5Yd0JGenlsV0dyckJJblBBNm4KQVlZU0wyWjN4UU1DSUZxcTV4aWs0S1I4Rk9FaGxFdDkxUDk4THBndnVnT21UR2hjblVKRlA3YXEKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
  SIGNING_KEY_NAME: "platform-team-cosign"
  TAILSCALE_SECRET_NAME: "tailscale-authkey"

jobs:
  build:
    permissions:
      id-token: write
      contents: read
    runs-on: ubuntu-latest
    outputs:
      digest: ${{ steps.build.outputs.digest }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: az login
        uses: azure/login@v1
        with:
          client-id: ${{ env.AZURE_CLIENT_ID }}
          tenant-id: ${{ env.AZURE_TENANT_ID }}
          subscription-id: ${{ env.AZURE_SUBSCRIPTION_ID }}
      - name: az account show
        run: az account show
      - name: Authenticate to ACR
        run: az acr login -n "${ACR_NAME}"
      - name: Image Metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.IMAGE_URI }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
      - name: Build & Push
        id: build
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
  sign:
    permissions:
      id-token: write
      contents: read
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: 'az login'
        uses: azure/login@v1
        with:
          client-id: ${{ env.AZURE_CLIENT_ID }}
          tenant-id: ${{ env.AZURE_TENANT_ID }}
          subscription-id: ${{ env.AZURE_SUBSCRIPTION_ID }}
      - name: 'az account show'
        run: |
          az account show
      - name: Authenticate to ACR
        run: az acr login -n "${ACR_NAME}"
      - name: Retrieve Tailscale Key
        id: tailscale-auth
        run: |
          authKey=$(az keyvault secret show --name "${TAILSCALE_SECRET_NAME}" --vault-name "${AZURE_KEYVAULT_NAME}" --query value -o tsv)
          echo "::add-mask::${authKey}"
          echo "authkey=${authKey}" >> $GITHUB_OUTPUT
      - name: Setup Tailscale
        uses: tailscale/github-action@main
        with:
          authkey: ${{ steps.tailscale-auth.outputs.authkey }}
      - name: Trust Ingress CA Certificate
        run: |
          printf "${INGRESS_CA}" | base64 -d > ca.crt
          sudo cp ca.crt /usr/local/share/ca-certificates
          sudo update-ca-certificates
      - name: Install Cosign
        uses: sigstore/cosign-installer@v3
        with:
          cosign-release: 'v2.0.0'
      - name: Sign
        env:
          AZURE_AUTH_METHOD: "cli"
        run: |
          # TODO: annotate
          cosign sign \
              --verbose \
              --output-signature image.sig \
              --key "azurekms://${AZURE_KEYVAULT_NAME}.vault.azure.net/${SIGNING_KEY_NAME}" \
              --rekor-url "https://${REKOR_HOST}" \
              -y ${IMAGE_URI}@${{ needs.build.outputs.digest }}
      - name: Archive Image Signature
        uses: actions/upload-artifact@v3
        with:
          name: image.sig
          path: image.sig
