on:
  workflow_dispatch:
  workflow_call:
    inputs:
      chart:
        description: "Helm chart name"
        type: string
        required: true
      version:
        description: "Chart semantic version"
        type: string
        required: true
      digest:
        description: "Chart digest"
        type: string
        required: true

jobs:
  metadata:
    permissions:
      id-token: write
      contents: read
    runs-on: ubuntu-latest
    outputs:
      ref: ${{ steps.workflow.outputs.ref }}
    steps:
      - name: Determine Workflow Ref
        id: workflow
        uses: liatrio/gh-trusted-builds-workflows/.github/actions/workflow-ref@main

  deploy:
    needs: [metadata]
    permissions:
      id-token: write
      contents: read
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Trusted Builds Config
        id: config
        uses: liatrio/gh-trusted-builds-workflows/.github/actions/config@deploy # TODO: point at main
        with:
          ref: ${{ needs.metadata.outputs.ref }}
          token: ${{ secrets.GH_PAT }}

      - name: Azure Setup
        uses: liatrio/gh-trusted-builds-workflows/.github/actions/azure@main
        with:
          acrName: ${{ steps.config.outputs.ACR_NAME }}
          client: ${{ steps.config.outputs.PLATFORM_TEAM_SP_CLIENT_ID }}
          subscription: ${{ steps.config.outputs.AZURE_SUBSCRIPTION_ID }}
          tenant: ${{ steps.config.outputs.AZURE_TENANT_ID }}

      - name: Tailscale
        uses: liatrio/gh-trusted-builds-workflows/.github/actions/tailscale@main
        with:
          vault: ${{ steps.config.outputs.PLATFORM_TEAM_VAULT }}

      - name: Helm Setup
        uses: liatrio/gh-trusted-builds-workflows/.github/actions/helm@deploy # TODO: point at main

      - name: Configure GPG Public Keyring
        run: |
          cat ${{ steps.config.outputs.PLATFORM_TEAM_GPG_PUBLIC_KEY_PATH }} | gpg --import --batch
          gpg --export > /home/runner/.gnupg/pubring.gpg

      # TODO: cosign verify, assert expected digest
      - name: Verify Helm Chart
        run: |
          helm pull \
              --prov \
              --version ${{ inputs.version }} \
              oci://${{ steps.config.outputs.ACR_NAME }}.azurecr.io/liatrio/gh-trusted-builds-helm/${{ inputs.chart }}
          
          ls -lh
          
          helm sigstore verify \
            --keyring /home/runner/.gnupg/pubring.gpg \
            --rekor-server ${{ steps.config.outputs.REKOR_URL }} "./${{ inputs.chart }}-${{ inputs.version }}.tgz"
