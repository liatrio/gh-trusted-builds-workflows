on:
  workflow_dispatch:
  workflow_call:

jobs:
  metadata:
    permissions:
      id-token: write
      contents: read
    runs-on: ubuntu-latest
    outputs:
      ref: ${{ steps.workflow.outputs.ref }}
    steps:
      - name: Determine Workflow Ref
        id: workflow
        uses: liatrio/gh-trusted-builds-workflows/.github/actions/workflow-ref@main

  deploy:
    needs: [metadata]
    permissions:
      id-token: write
      contents: read
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Trusted Builds Config
        id: config
        uses: liatrio/gh-trusted-builds-workflows/.github/actions/config@deploy # TODO: point at main
        with:
          ref: ${{ needs.metadata.outputs.ref }}
          token: ${{ secrets.GH_PAT }}

#      - name: Azure Setup
#        uses: liatrio/gh-trusted-builds-workflows/.github/actions/azure@main
#        with:
#          acrName: ${{ steps.config.outputs.ACR_NAME }}
#          client: ${{ steps.config.outputs.PLATFORM_TEAM_SP_CLIENT_ID }}
#          subscription: ${{ steps.config.outputs.AZURE_SUBSCRIPTION_ID }}
#          tenant: ${{ steps.config.outputs.AZURE_TENANT_ID }}

#      - name: Tailscale
#        uses: liatrio/gh-trusted-builds-workflows/.github/actions/tailscale@main
#        with:
#          vault: ${{ steps.config.outputs.PLATFORM_TEAM_VAULT }}

      - name: Helm Setup
        uses: liatrio/gh-trusted-builds-workflows/.github/actions/helm@deploy # TODO: point at main

      - name: Configure GPG Public Keyring
        run: |
          cat ${{ steps.config.outputs.PLATFORM_TEAM_GPG_PUBLIC_KEY_PATH }} | gpg --import --batch
          gpg --export > /home/runner/.gnupg/pubring.gpg

      # TODO: cosign verify, assert expected digest
      - name: Verify Helm Chart
        run: |
          helm pull \
              --version 0.1.0 \
              oci://${{ steps.config.outputs.ACR_NAME }}.azurecr.io/${{ github.repository }}/go-web-app
          
          ls -lh
          
          helm sigstore verify \
            --keyring /home/runner/.gnupg/pubring.gpg \
            --rekor-server ${{ steps.config.outputs.REKOR_URL }} "./go-web-app-0.1.0.tar.gz"