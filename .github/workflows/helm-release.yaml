on:
  workflow_dispatch:
  workflow_call:

env:
  GPG_KEY_NAME: "Liatrio Platform Team"
  GPG_KEYRING_PATH: "/home/runner/.gnupg/secring.gpg"

jobs:
  metadata:
    permissions:
      id-token: write
      contents: read
    runs-on: ubuntu-latest
    outputs:
      ref: ${{ steps.workflow.outputs.ref }}
    steps:
      - name: Determine Workflow Ref
        id: workflow
        uses: liatrio/gh-trusted-builds-workflows/.github/actions/workflow-ref@main

  release:
    needs: [metadata]
    permissions:
      id-token: write
      contents: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Git User Config
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Trusted Builds Config
        id: config
        uses: liatrio/gh-trusted-builds-workflows/.github/actions/config@deploy # TODO: point at main
        with:
          ref: ${{ needs.metadata.outputs.ref }}
          token: ${{ secrets.GH_PAT }}

      - name: Azure Setup
        uses: liatrio/gh-trusted-builds-workflows/.github/actions/azure@main
        with:
          acrName: ${{ steps.config.outputs.ACR_NAME }}
          client: ${{ steps.config.outputs.PLATFORM_TEAM_SP_CLIENT_ID }}
          subscription: ${{ steps.config.outputs.AZURE_SUBSCRIPTION_ID }}
          tenant: ${{ steps.config.outputs.AZURE_TENANT_ID }}

      - name: Tailscale
        uses: liatrio/gh-trusted-builds-workflows/.github/actions/tailscale@main
        with:
          vault: ${{ steps.config.outputs.PLATFORM_TEAM_VAULT }}

      - name: Helm Setup
        uses: liatrio/gh-trusted-builds-workflows/.github/actions/helm@deploy # TODO: point at main
        with:
          token: ${{ secrets.GH_PAT }}

      - name: Configure Helm Repo
        run: |
          helm repo index --url https://raw.githubusercontent.com/liatrio/gh-trusted-builds-helm/gh-pages .

      - name: Configure GPG Key
        run: |
          az keyvault secret show \
            --name platform-gpg-key \
            --vault-name ${{ steps.config.outputs.PLATFORM_TEAM_VAULT }} \
            --query value -o tsv | gpg --import --batch
          
          gpg --export > /home/runner/.gnupg/pubring.gpg
          gpg --export-secret-keys "${GPG_KEY_NAME}" > "${GPG_KEYRING_PATH}"

      - name: Run Chart Releaser
        uses: helm/chart-releaser-action@v1.5.0
        env:
          CR_KEY: ${{ env.GPG_KEY_NAME }}
          CR_KEYRING: ${{ env.GPG_KEYRING_PATH }}
          CR_SIGN: "true"
          CR_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # https://github.com/sigstore/helm-charts/blob/5c098c80b90d6ce1f1cb6f54d0c16cd03654dabd/.github/workflows/release.yml#L57-L61
      - name: Upload Helm Provenance
        run: |
          for chart in $(find .cr-release-packages -name '*.tgz' -print); do
            helm sigstore upload --keyring ${GPG_KEYRING_PATH} --rekor-server ${{ steps.config.outputs.REKOR_URL }} ${chart}
          done
