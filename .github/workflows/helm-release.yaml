on:
  workflow_dispatch:
  workflow_call:

env:
  SIGSTORE_HELM_PLUGIN_VERSION: "v0.2.0"
  GPG_KEY_NAME: "Liatrio Platform Team"
  GPG_KEYRING_PATH: "/home/runner/.gnupg/secring.gpg"

jobs:
  release:
    permissions:
      id-token: write
      contents: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Git User Config
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Trusted Builds Config
        id: config
        uses: liatrio/gh-trusted-builds-workflows/.github/actions/config@main
        with:
          ref: ${{ needs.metadata.outputs.ref }}
          token: ${{ secrets.GH_PAT }}

      - name: Azure Setup
        uses: liatrio/gh-trusted-builds-workflows/.github/actions/azure@main
        with:
          acrName: ${{ steps.config.outputs.ACR_NAME }}
          client: ${{ steps.config.outputs.PLATFORM_TEAM_SP_CLIENT_ID }}
          subscription: ${{ steps.config.outputs.AZURE_SUBSCRIPTION_ID }}
          tenant: ${{ steps.config.outputs.AZURE_TENANT_ID }}

      - name: Tailscale
        uses: liatrio/gh-trusted-builds-workflows/.github/actions/tailscale@main
        with:
          vault: ${{ steps.config.outputs.PLATFORM_TEAM_VAULT }}

# TODO: use sign-blob on tar file?
#      - name: Cosign Setup
#        uses: liatrio/gh-trusted-builds-workflows/.github/actions/cosign@main
#        with:
#          tufRoot: ${{ steps.config.outputs.TUF_ROOT_PATH }}
#          tufMirror: ${{ steps.config.outputs.TUF_ROOT_MIRROR }}

      - name: Install Helm
        uses: azure/setup-helm@v3
        with:
          version: 3.11.3

      - name: Install Sigstore Helm Plugin
        run: |
          helm plugin install --version "${SIGSTORE_HELM_PLUGIN_VERSION}" https://github.com/sigstore/helm-sigstore

      - name: Configure GPG Key
        run: |
          az keyvault secret show \
            --name platform-gpg-key \
            --vault-name ${{ steps.config.outputs.PLATFORM_TEAM_VAULT }} \
            --query value -o tsv | gpg --import --batch
          
          gpg --version
          gpg --list-secret-keys --keyid-format=long
          
          echo "exporting public keys"
          gpg --export > /home/runner/.gnupg/pubring.gpg
          
          echo "exporting secret keys"
          gpg --export-secret-keys "${GPG_KEY_NAME}" > "${GPG_KEYRING_PATH}"

      - name: Run Chart Releaser
        uses: helm/chart-releaser-action@v1.5.0
        env:
          CR_KEY: ${{ env.GPG_KEY_NAME }}
          CR_KEYRING: ${{ env.GPG_KEYRING_PATH }}
          CR_SIGN: "true"
          CR_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # https://github.com/sigstore/helm-charts/blob/5c098c80b90d6ce1f1cb6f54d0c16cd03654dabd/.github/workflows/release.yml#L57-L61
      - name: Upload Helm Provenance
        run: |
          ls -lha .cr-release-packages/

          for chart in $(find .cr-release-packages -name '*.tgz' -print); do
            helm sigstore --keyring ${GPG_KEYRING_PATH} --rekor-server ${{ steps.config.outputs.REKOR_URL }} ${chart}
          done
