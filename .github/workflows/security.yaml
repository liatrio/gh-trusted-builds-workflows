on:
  push:
    branches:
      - main
  workflow_dispatch: {}

env:
  REKOR_HOST: "rekor.sec-guild-dev.private.northcentralus.azmk8s.io"

jobs:
  az-auth:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: 'az login'
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      - name: 'az account show'
        run: |
          az account show
      - name: Setup Tailscale
        uses: tailscale/github-action@main
        with:
          authkey: ${{ secrets.TAILSCALE_AUTHKEY }}
          args: '--ssh'
      - name: Nap time
        run: |
          sleep infinity

#  show-claims:
#    permissions:
#      id-token: write
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/github-script@v6
#        id: script
#        timeout-minutes: 10
#        with:
#          debug: true
#          script: |
#            const token = process.env['ACTIONS_RUNTIME_TOKEN']
#            const runtimeUrl = process.env['ACTIONS_ID_TOKEN_REQUEST_URL']
#            core.setOutput('TOKEN', token.trim())
#            core.setOutput('TOKENURL', runtimeUrl.trim())
#      - name: 'Get Token'
#        run: |
#          echo "Requesting token"
#          IDTOKEN=$(curl -H "Authorization: Bearer ${{steps.script.outputs.TOKEN}}" ${{steps.script.outputs.TOKENURL}}  -H "Accept: application/json; api-version=2.0" -H "Content-Type: application/json" -d "{}" | jq -r '.value')
#          jwtd() {
#              if [[ -x $(command -v jq) ]]; then
#                  jq -R 'split(".") | .[0],.[1] | @base64d | fromjson' <<< "${1}"
#                  echo "Signature: $(echo "${1}" | awk -F'.' '{print $3}')"
#              fi
#          }
#          jwtd $IDTOKEN
