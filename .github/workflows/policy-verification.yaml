on:
  workflow_dispatch:
  workflow_call:
    inputs:
      digest:
        type: string
        required: true
        description: "Docker image digest"

env:
  AZURE_CLIENT_ID: "58162388-16a0-4c7c-91f4-bdfc1ce2cd69"
  AZURE_TENANT_ID: "1b4a4fed-fed8-4823-a8a0-3d5cea83d122"
  AZURE_SUBSCRIPTION_ID: "3e16852e-8399-4c16-b246-16bf46bc3747"
  AZURE_KEYVAULT_NAME: "ag-poc-security-OtfL"
  ACR_NAME: "agplatformrnim"
  GITHUB_ACTIONS_ISSUER: "https://token.actions.githubusercontent.com"
  FULCIO_HOST: "fulcio.sec-guild-dev.private.northcentralus.azmk8s.io"
  REKOR_HOST: "rekor.sec-guild-dev.private.northcentralus.azmk8s.io"
  INGRESS_CA: "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJkVENDQVJ5Z0F3SUJBZ0lRVG95NnBId0Rwb2R2UnFuRFZsMkY4REFLQmdncWhrak9QUVFEQWpBYk1Sa3cKRndZRFZRUURFeEJ0ZVMxelpXeG1jMmxuYm1Wa0xXTmhNQjRYRFRJek1EVXdNakF5TURNd09Wb1hEVEl6TURjegpNVEF5TURNd09Wb3dHekVaTUJjR0ExVUVBeE1RYlhrdGMyVnNabk5wWjI1bFpDMWpZVEJaTUJNR0J5cUdTTTQ5CkFnRUdDQ3FHU000OUF3RUhBMElBQlB3SjdWREl6bExjR2dBZTgwODJjRDhiLzNqZ3V2S0o5U0xXb1F0TDl4L1kKcDNYaTdKNDBkSEFicFV0QUJlaEhOWjhXUXJ0V0h3SVFNOE44SUtBTlk5R2pRakJBTUE0R0ExVWREd0VCL3dRRQpBd0lDcERBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJTRjZjRVI1SUlnZGVvaE93U2pzNmRKCm9aZnIxakFLQmdncWhrak9QUVFEQWdOSEFEQkVBaUVBalZwQk84Nnc4alEyTk9tRTZqQml4L2xBbWp0SUVMOCsKcDBMTEp0d1N2Y2tDSDFEVnh1QVJidVhFS05RTUFrdTRHSktQWU9YWEtIY0hzbWdvMW9sN3BzST0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
  SIGNING_KEY_NAME: "security-team-cosign"
  TAILSCALE_SECRET_NAME: "tailscale-authkey"
  TUF_ROOT_MIRROR: "https://agtufrootcrml.blob.core.windows.net/tuf-root"

jobs:
  verify:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: 'az login'
        uses: azure/login@v1
        with:
          client-id: ${{ env.AZURE_CLIENT_ID }}
          tenant-id: ${{ env.AZURE_TENANT_ID }}
          subscription-id: ${{ env.AZURE_SUBSCRIPTION_ID }}

      - name: 'az account show'
        run: |
          az account show

      - name: Authenticate to ACR
        run: az acr login -n "${ACR_NAME}"

      - name: Retrieve Tailscale Key
        id: tailscale-auth
        run: |
          authKey=$(az keyvault secret show --name "${TAILSCALE_SECRET_NAME}" --vault-name "${AZURE_KEYVAULT_NAME}" --query value -o tsv)
          echo "::add-mask::${authKey}"
          echo "authkey=${authKey}" >> $GITHUB_OUTPUT

      - name: Setup Tailscale
        uses: tailscale/github-action@main
        with:
          authkey: ${{ steps.tailscale-auth.outputs.authkey }}

      - name: Trust Ingress CA Certificate
        run: |
          printf "${INGRESS_CA}" | base64 -d > ca.crt
          sudo cp ca.crt /usr/local/share/ca-certificates
          sudo update-ca-certificates

      - name: Install Cosign
        uses: sigstore/cosign-installer@v3
        with:
          cosign-release: 'v2.0.2'

      - name: Initialize Cosign
        run: |
          cosign initialize --mirror ${TUF_ROOT_MIRROR} --root root.json 

      - name: Install Rekor CLI
        run: |
          curl -Lo rekor-cli https://github.com/sigstore/rekor/releases/download/v1.1.0/rekor-cli-linux-amd64
          chmod +x rekor-cli
          sudo cp rekor-cli /usr/local/bin/.
          rekor-cli version

      - name: Verify Attestations
        env:
          AZURE_AUTH_METHOD: "cli"
        run: |
          cosign tree ${{ env.ACR_NAME }}.azurecr.io/${{ github.repository }}@${{ inputs.digest }} 
          
          cosign verify-attestation \
            --rekor-url "https://${REKOR_HOST}" \
            --certificate-oidc-issuer "${GITHUB_ACTIONS_ISSUER}" \
            --certificate-github-workflow-repository ${{ github.repository }} \
            --certificate-identity https://github.com/liatrio/gh-trusted-builds-workflows/.github/workflows/scan-image.yaml@refs/heads/keyless \
            --type vuln \
            ${{ env.ACR_NAME }}.azurecr.io/${{ github.repository }}@${{ inputs.digest }}

      - name: Collect Attestations
        run: |
          echo "collect artifact attestation uuids"
          rekor-cli search \
            --rekor_server "https://${REKOR_HOST}" \
            --sha ${{ inputs.digest }} \
            --format json > artifact.json
          cat artifact.json
          
          echo "collect source attestation uuids"
          rekor-cli search \
            --rekor_server "https://${REKOR_HOST}" \
            --sha ${GITHUB_SHA} \
            --format json > source.json
          cat source.json
          
          echo '[]' > attestations.json
          
          echo "collect attestations"
          for uuid in $(jq -rn 'inputs.UUIDs[]' artifact.json source.json); do
          attestation=$(rekor-cli get \
          --rekor_server "https://${REKOR_HOST}" \
          --uuid "$uuid" \
          --format json)
          cat << EOF > attestations.json
          $(jq -c --argjson new "$attestation" '. += [$new]' attestations.json)
          EOF
          done

      - name: Setup OPA
        uses: open-policy-agent/setup-opa@v2
        with:
          version: 0.52.0

      - name: Download Governance OPA Bundle
        env:
          GH_TOKEN: ${{ secrets.GH_PAT }}
        run: |
          gh release download v1.0.1 \
            --repo liatrio/gh-trusted-builds-policy \
            --pattern "bundle.tar.gz"

      - name: Check Governance Policy
        run: |
          opa eval 'data.governance.allow' \
            --bundle bundle.tar.gz \
            --input attestations.json \
            | jq -e '.result[0].expressions[0].value == true'

      - name: Sign Artifact
        env:
          AZURE_AUTH_METHOD: "cli"
        run: |
          cosign sign \
            -a liatr.io/github-actions-run-link='${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}' \
            -a liatr.io/signed-off-by=security-team \
            --output-signature image.sig \
            --rekor-url "https://${REKOR_HOST}" \
            --fulcio-url "https://${FULCIO_HOST}" \
            -y ${{ env.ACR_NAME }}.azurecr.io/${{ github.repository }}@${{ inputs.digest }}

      - name: Upload Signatures
        uses: actions/upload-artifact@v3
        with:
          name: security.sig
          path: |
            image.sig
