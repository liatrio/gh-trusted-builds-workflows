on:
  workflow_dispatch:
  workflow_call:
    inputs:
      digest:
        type: string
        required: true
        description: "Docker image digest"

env:
  GITHUB_ACTIONS_ISSUER: "https://token.actions.githubusercontent.com"
  VSA_APP_VERSION: "1.0.0"

jobs:
  metadata:
    permissions:
      id-token: write
      contents: read
    runs-on: ubuntu-latest
    outputs:
      ref: ${{ steps.workflow.outputs.ref }}
    steps:
      - name: Determine Workflow Ref
        id: workflow
        uses: liatrio/gh-trusted-builds-workflows/.github/actions/workflow-ref@main

  verify:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    needs: [metadata]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Trusted Builds Config
        id: config
        uses: liatrio/gh-trusted-builds-workflows/.github/actions/config@main
        with:
          ref: ${{ needs.metadata.outputs.ref }}
          token: ${{ secrets.GH_PAT }}

      - name: Azure Setup
        uses: liatrio/gh-trusted-builds-workflows/.github/actions/azure@main
        with:
          acrName: ${{ steps.config.outputs.ACR_NAME }}
          client: ${{ steps.config.outputs.SECURITY_TEAM_SP_CLIENT_ID }}
          subscription: ${{ steps.config.outputs.AZURE_SUBSCRIPTION_ID }}
          tenant: ${{ steps.config.outputs.AZURE_TENANT_ID }}

      - name: Tailscale
        uses: liatrio/gh-trusted-builds-workflows/.github/actions/tailscale@main
        with:
          vault: ${{ steps.config.outputs.SECURITY_TEAM_VAULT }}

      - name: Cosign Setup
        uses: liatrio/gh-trusted-builds-workflows/.github/actions/cosign@main
        with:
          tufRoot: ${{ steps.config.outputs.TUF_ROOT_PATH }}
          tufMirror: ${{ steps.config.outputs.TUF_ROOT_MIRROR }}

      - name: Install VSA Application
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
        run: |
          gh release download \
            --repo liatrio/gh-trusted-builds-vsa \
            --pattern "gh-trusted-builds-vsa_${VSA_APP_VERSION}_linux_amd64.tar.gz" "v${VSA_APP_VERSION}"
          tar xvf "gh-trusted-builds-vsa_${VSA_APP_VERSION}_linux_amd64.tar.gz"
          sudo cp ./vsa /usr/local/bin/vsa
          vsa --help

      - name: Verify Attestations
        run: |
          cosign tree ${{ steps.config.outputs.ACR_NAME }}.azurecr.io/${{ github.repository }}@${{ inputs.digest }} 
          
          cosign verify-attestation \
            --rekor-url ${{ steps.config.outputs.REKOR_URL }} \
            --certificate-oidc-issuer "${GITHUB_ACTIONS_ISSUER}" \
            --certificate-github-workflow-repository ${{ github.repository }} \
            --certificate-identity https://github.com/liatrio/gh-trusted-builds-workflows/.github/workflows/scan-image.yaml@${{ needs.metadata.outputs.ref }} \
            --type vuln \
            ${{ steps.config.outputs.ACR_NAME }}.azurecr.io/${{ github.repository }}@${{ inputs.digest }}

      - name: Create Verification Summary Attestation
        run: |
          vsa \
          --artifact-uri ${{ steps.config.outputs.ACR_NAME }}.azurecr.io/${{ github.repository }} \
          --artifact-digest ${{ inputs.digest }} \
          --commit-sha ${{ github.sha }} \
          --policy-version "v1.1.1" \
          --verifier-id ${{ github.workflow_ref }} \
          --fulcio-url ${{ steps.config.outputs.FULCIO_URL }}
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
