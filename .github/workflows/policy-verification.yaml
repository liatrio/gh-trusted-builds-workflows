on:
  workflow_dispatch:
  workflow_call:
    inputs:
      digest:
        type: string
        required: true
        description: "Docker image digest"

env:
  GITHUB_ACTIONS_ISSUER: "https://token.actions.githubusercontent.com"

jobs:
  metadata:
    permissions:
      id-token: write
      contents: read
    runs-on: ubuntu-latest
    outputs:
      ref: ${{ steps.workflow.outputs.ref }}
    steps:
      - name: Determine Workflow Ref
        id: workflow
        uses: liatrio/gh-trusted-builds-workflows/.github/actions/workflow-ref@main

  verify:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    needs: [metadata]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Trusted Builds Config
        id: config
        uses: liatrio/gh-trusted-builds-workflows/.github/actions/config@main
        with:
          ref: ${{ needs.metadata.outputs.ref }}
          token: ${{ secrets.GH_PAT }}

      - name: Azure Setup
        uses: liatrio/gh-trusted-builds-workflows/.github/actions/azure@main
        with:
          acrName: ${{ steps.config.outputs.ACR_NAME }}
          client: ${{ steps.config.outputs.SECURITY_TEAM_SP_CLIENT_ID }}
          subscription: ${{ steps.config.outputs.AZURE_SUBSCRIPTION_ID }}
          tenant: ${{ steps.config.outputs.AZURE_TENANT_ID }}

      - name: Tailscale
        uses: liatrio/gh-trusted-builds-workflows/.github/actions/tailscale@main
        with:
          vault: ${{ steps.config.outputs.SECURITY_TEAM_VAULT }}

      - name: Cosign Setup
        uses: liatrio/gh-trusted-builds-workflows/.github/actions/cosign@main
        with:
          tufRoot: ${{ steps.config.outputs.TUF_ROOT_PATH }}
          tufMirror: ${{ steps.config.outputs.TUF_ROOT_MIRROR }}

      - name: Install Rekor CLI
        run: |
          curl -Lo rekor-cli https://github.com/sigstore/rekor/releases/download/v1.1.0/rekor-cli-linux-amd64
          chmod +x rekor-cli
          sudo cp rekor-cli /usr/local/bin/.
          rekor-cli version

      - name: Verify Attestations
        env:
          AZURE_AUTH_METHOD: "cli"
        run: |
          cosign tree ${{ steps.config.outputs.ACR_NAME }}.azurecr.io/${{ github.repository }}@${{ inputs.digest }} 
          
          cosign verify-attestation \
            --rekor-url ${{ steps.config.outputs.REKOR_URL }} \
            --certificate-oidc-issuer "${GITHUB_ACTIONS_ISSUER}" \
            --certificate-github-workflow-repository ${{ github.repository }} \
            --certificate-identity https://github.com/liatrio/gh-trusted-builds-workflows/.github/workflows/scan-image.yaml@${{ needs.metadata.outputs.ref }} \
            --type vuln \
            ${{ steps.config.outputs.ACR_NAME }}.azurecr.io/${{ github.repository }}@${{ inputs.digest }}

      - name: Collect Attestations
        run: |
          echo "collect artifact attestation uuids"
          rekor-cli search \
            --rekor_server ${{ steps.config.outputs.REKOR_URL }} \
            --sha ${{ inputs.digest }} \
            --format json > artifact.json
          cat artifact.json
          
          echo "collect source attestation uuids"
          rekor-cli search \
            --rekor_server ${{ steps.config.outputs.REKOR_URL }} \
            --sha ${GITHUB_SHA} \
            --format json > source.json
          cat source.json
          
          echo '[]' > attestations.json
          
          echo "collect attestations"
          for uuid in $(jq -rn 'inputs.UUIDs[]' artifact.json source.json); do
          attestation=$(rekor-cli get \
          --rekor_server ${{ steps.config.outputs.REKOR_URL }} \
          --uuid "$uuid" \
          --format json)
          cat << EOF > attestations.json
          $(jq -c --argjson new "$attestation" '. += [$new]' attestations.json)
          EOF
          done

      - name: Setup OPA
        uses: open-policy-agent/setup-opa@v2
        with:
          version: 0.52.0

      - name: Download Governance OPA Bundle
        env:
          GH_TOKEN: ${{ secrets.GH_PAT }}
        run: |
          gh release download v1.0.1 \
            --repo liatrio/gh-trusted-builds-policy \
            --pattern "bundle.tar.gz"

      - name: Check Governance Policy
        run: |
          opa eval 'data.governance.allow' \
            --bundle bundle.tar.gz \
            --input attestations.json \
            | jq -e '.result[0].expressions[0].value == true'

      - name: Sign Artifact
        env:
          AZURE_AUTH_METHOD: "cli"
        run: |
          cosign sign \
            -a liatr.io/github-actions-run-link='${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}' \
            -a liatr.io/signed-off-by=security-team \
            --output-signature image.sig \
            --rekor-url ${{ steps.config.outputs.REKOR_URL }} \
            --fulcio-url ${{ steps.config.outputs.FULCIO_URL }} \
            -y ${{ steps.config.outputs.ACR_NAME }}.azurecr.io/${{ github.repository }}@${{ inputs.digest }}

      - name: Upload Signatures
        uses: actions/upload-artifact@v3
        with:
          name: security.sig
          path: |
            image.sig
