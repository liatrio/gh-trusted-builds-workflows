on:
  workflow_dispatch:
  workflow_call:
    inputs:
      digest:
        type: string
        required: true
        description: "Docker image digest"

jobs:
  metadata:
    permissions:
      id-token: write
      contents: read
    runs-on: ubuntu-latest
    outputs:
      ref: ${{ steps.workflow.outputs.ref }}
    steps:
      - name: Determine Workflow Ref
        id: workflow
        uses: liatrio/gh-trusted-builds-workflows/.github/actions/workflow-ref@keyless # TODO: point at main

  scan:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    needs: [metadata]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Trusted Builds Config
        id: config
        uses: liatrio/gh-trusted-builds-workflows/.github/actions/config@keyless
        with:
          ref: ${{needs.metadata.outputs.ref}}
          token: ${{ secrets.GH_PAT }}

      - name: Azure Setup
        uses: liatrio/gh-trusted-builds-workflows/.github/actions/azure@keyless
        with:
          acrName: ${{ steps.config.outputs.ACR_NAME }}
          client: ${{ steps.config.outputs.SECURITY_TEAM_SP_CLIENT_ID }}
          subscription: ${{ steps.config.outputs.AZURE_SUBSCRIPTION_ID }}
          tenant: ${{ steps.config.outputs.AZURE_TENANT_ID }}

      - name: Tailscale
        uses: liatrio/gh-trusted-builds-workflows/.github/actions/tailscale@keyless
        with:
          vault: ${{ steps.config.outputs.SECURITY_TEAM_VAULT }}

      # Trivy only supports basic auth credentials for the registry, so we're pulling it before running the scan
      - name: Pull Image
        run: |
          docker pull ${{ steps.config.outputs.ACR_NAME }}.azurecr.io/${{ github.repository }}@${{ inputs.digest }}

      - name: Trivy Scan
        uses: aquasecurity/trivy-action@0.9.2
        with:
          image-ref: ${{ steps.config.outputs.ACR_NAME }}.azurecr.io/${{ github.repository }}@${{ inputs.digest }}
          format: 'cosign-vuln'
          exit-code: '1'
          ignore-unfixed: true
          output: trivy.report.json
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'

      - name: Upload Trivy Report
        uses: actions/upload-artifact@v3
        with:
          name: trivy.report.json
          path: trivy.report.json

      - name: Show Report
        run: |
          cat trivy.report.json

      - name: Cosign Setup
        uses: liatrio/gh-trusted-builds-workflows/.github/actions/cosign@keyless
        with:
          tufRoot: ${{ steps.config.outputs.TUF_ROOT_PATH }}
          tufMirror: ${{ steps.config.outputs.TUF_ROOT_MIRROR }}

      - name: Attest Scan
        env:
          AZURE_AUTH_METHOD: "cli"
          COSIGN_EXPERIMENTAL: 1
        run: |
          cosign attest \
            --verbose \
            --predicate ./trivy.report.json \
            --type vuln \
            --rekor-url ${{ steps.config.outputs.REKOR_URL }} \
            --fulcio-url ${{ steps.config.outputs.FULCIO_URL }} \
            -y \
            ${{ steps.config.outputs.ACR_NAME }}.azurecr.io/${{ github.repository }}@${{ inputs.digest }}
