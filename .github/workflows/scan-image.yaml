on:
  workflow_dispatch:
  workflow_call:
    inputs:
      digest:
        type: string
        required: true
        description: "Docker image digest"

env:
  AZURE_CLIENT_ID: "58162388-16a0-4c7c-91f4-bdfc1ce2cd69"
  AZURE_TENANT_ID: "1b4a4fed-fed8-4823-a8a0-3d5cea83d122"
  AZURE_SUBSCRIPTION_ID: "3e16852e-8399-4c16-b246-16bf46bc3747"
  ACR_NAME: "agplatformrnim"
  REKOR_HOST: "rekor-ham0vei9.ngrok.io"
  FULCIO_HOST: "fulcio-ham0vei9.ngrok.io"
  TUF_ROOT_MIRROR: "https://agtufrootcrml.blob.core.windows.net/tuf-root"

jobs:
  scan:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: 'az login'
        uses: azure/login@v1
        with:
          client-id: ${{ env.AZURE_CLIENT_ID }}
          tenant-id: ${{ env.AZURE_TENANT_ID }}
          subscription-id: ${{ env.AZURE_SUBSCRIPTION_ID }}

      - name: 'az account show'
        run: |
          az account show

      - name: Authenticate to ACR
        run: az acr login -n "${ACR_NAME}"

      # Trivy only supports basic auth credentials for the registry, so we're pulling it before running the scan
      - name: Pull Image
        run: |
          docker pull ${{ env.ACR_NAME }}.azurecr.io/${{ github.repository }}@${{ inputs.digest }}

      - name: Trivy Scan
        uses: aquasecurity/trivy-action@0.9.2
        with:
          image-ref: ${{ env.ACR_NAME }}.azurecr.io/${{ github.repository }}@${{ inputs.digest }}
          format: 'cosign-vuln'
          exit-code: '1'
          ignore-unfixed: true
          output: trivy.report.json
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'

      - name: Upload Trivy Report
        uses: actions/upload-artifact@v3
        with:
          name: trivy.report.json
          path: trivy.report.json

      - name: Show Report
        run: |
          cat trivy.report.json

      - name: Install Cosign
        uses: sigstore/cosign-installer@v3
        with:
          cosign-release: 'v2.0.2'

      - name: Initialize Cosign
        run: |
          cosign initialize --mirror ${TUF_ROOT_MIRROR} --root root.json

      - name: Attest Scan
        env:
          AZURE_AUTH_METHOD: "cli"
          COSIGN_EXPERIMENTAL: 1
        run: |
          cosign attest \
            --verbose \
            --predicate ./trivy.report.json \
            --type vuln \
            --rekor-url "https://${REKOR_HOST}" \
            --fulcio-url "https://${FULCIO_HOST}" \
            -y \
            ${{ env.ACR_NAME }}.azurecr.io/${{ github.repository }}@${{ inputs.digest }}
