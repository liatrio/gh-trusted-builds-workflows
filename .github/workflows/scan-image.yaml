name: Scan Image

on:
  workflow_call:
    inputs:
      cosignVersion:
        description: "Sigstore cosign version"
        default: "v2.0.2"
        type: string
      digest:
        type: string
        required: true
        description: "Docker image digest"
      fulcioUrl:
        description: "Sigstore Fulcio URL. Defaults to the production public good instance"
        default: "https://fulcio.sigstore.dev"
        type: string
      rekorUrl:
        description: "Sigstore Rekor URL. Defaults to the production public good instance"
        default: "https://rekor.sigstore.dev"
        type: string
      tufMirror:
        description: "cosign TUF root mirror URL. If not specified, cosign initialize will not be invoked"
        default: ""
        type: string
      tufRoot:
        description: "cosign TUF initial trusted root. If not specified, cosign initialize will not be invoked"
        default: ""
        type: string

jobs:
  detect-workflow:
    runs-on: ubuntu-latest
    permissions:
      id-token: write # needed to grab job_workflow_ref information
    outputs:
      repository: ${{ steps.detect.outputs.repository }}
      ref: ${{ steps.detect.outputs.ref }}
      workflow: ${{ steps.detect.outputs.workflow }}
    steps:
      - name: Detect the repository and ref
        id: detect
        uses: slsa-framework/slsa-github-generator/.github/actions/detect-workflow-js@4c58bbb748c404a00c25e1b8350312b723f9989b # v1.6.0

  scan:
    permissions:
      id-token: write # required to sign attestations
      contents: read # for reading local TUF root.json file
      packages: write # required to upload attestations to GHCR
    runs-on: ubuntu-latest
    needs: [detect-workflow]
    defaults:
      run:
        working-directory: ./app
    steps:
      - name: Checkout App Repo
        uses: actions/checkout@v3
        with:
          path: app

      - name: Checkout Workflows Repo
        uses: actions/checkout@v3
        with:
          repository: ${{ needs.detect-workflow.outputs.repository }}
          ref: ${{ needs.detect-workflow.outputs.ref }}
          path: gh-trusted-builds-workflows
          persist-credentials: false

      - name: Trivy Scan
        uses: aquasecurity/trivy-action@0.9.2
        with:
          image-ref: ghcr.io/${{ github.repository }}@${{ inputs.digest }}
          format: 'cosign-vuln'
          output: ./app/trivy.report.json
        env:
          TRIVY_USERNAME: ${{ github.actor }}
          TRIVY_PASSWORD: ${{ secrets.GITHUB_TOKEN }}

      - name: Cosign Setup
        uses: ./gh-trusted-builds-workflows/.github/actions/cosign
        with:
          tufRoot: ${{ inputs.tufRoot }}
          tufMirror: ${{ inputs.tufMirror }}
          version: ${{ inputs.cosignVersion }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Attest Scan
        run: |
          cosign attest \
            --predicate ./trivy.report.json \
            --type vuln \
            --rekor-url ${{ inputs.rekorUrl }} \
            --fulcio-url ${{ inputs.fulcioUrl }} \
            --yes \
            ghcr.io/${{ github.repository }}@${{ inputs.digest }}
