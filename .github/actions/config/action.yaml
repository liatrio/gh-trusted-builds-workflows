name: Config
description: Common configuration values shared across the different workflows

inputs:
  environment:
    description: "Sigstore public good environment"
    default: "production"

outputs:
  attestorVersion:
    description: "liatrio/gh-trusted-builds-attestations version"
    # renovate: datasource=github-releases depName=liatrio/gh-trusted-builds-attestations
    value: "1.1.7"
  cosignVersion:
    description: "Sigstore cosign version"
    # renovate: datasource=github-releases depName=sigstore/cosign
    value: "v2.2.3"
  craneVersion:
    description: "google/go-containerregistry crane version"
    # renovate: datasource=github-releases depName=google/go-containerregistry
    value: "v0.19.0"
  fulcioUrl:
    description: "Sigstore Fulcio URL. Defaults to the production public good instance"
    value: "${{ steps.config.outputs.fulcioUrl }}"
  helmVersion:
    description: "Helm version"
    # renovate: datasource=github-releases depName=helm/helm
    value: "v3.14.3"
  k3dVersion:
    description: "k3d version"
    # renovate: datasource=github-releases depName=k3d-io/k3d
    value: "v5.6.0"
  policyVersion:
    description: "Rego policy version used to create the verification summary attestation"
    # renovate: datasource=github-releases depName=liatrio/gh-trusted-builds-policy
    value: "v1.5.0"
  policyControllerVersion:
    description: "Policy controller Helm chart version"
    # renovate: datasource=helm depName=policy-controller
    value: "0.6.8"
  rekorUrl:
    description: "Sigstore Rekor URL. Defaults to the production public good instance"
    value: "${{ steps.config.outputs.rekorUrl }}"
  slsaGeneratorVersion:
    description: "SLSA container provenance generator version"
    # renovate: datasource=github-releases depName=slsa-framework/slsa-github-generator
    value: "1.9.0"
  syftVersion:
    description: "Anchore syft version"
    # renovate: datasource=github-releases depName=anchore/syft
    value: "v1.0.1"
  tufMirror:
    description: "cosign TUF root mirror URL"
    value: "${{ steps.config.outputs.tufMirror }}"
  tufRoot:
    description: "cosign TUF initial trusted root"
    value: "${{ steps.config.outputs.tufRoot }}"

runs:
  using: "composite"
  steps:
    - name: Set outputs
      id: config
      shell: bash
      env:
        ENVIRONMENT: ${{ inputs.environment }}
      run: |
        function output() {
          name="${1}"
          value="${2}"

          echo "${name}=${value}" >> $GITHUB_OUTPUT
        }

        case "${ENVIRONMENT}" in
          "production")
            output "fulcioUrl" "https://fulcio.sigstore.dev"
            output "rekorUrl"  "https://rekor.sigstore.dev"
            ;;
          "staging")
            output "fulcioUrl" "https://fulcio.sigstage.dev"
            output "rekorUrl"  "https://rekor.sigstage.dev"
            output "tufMirror" "https://tuf-repo-cdn.sigstage.dev"
            output "tufRoot"   "sigstore/staging/1.root.json"
            ;;
          *)
            echo "Invalid value for environment: '${ENVIRONMENT}'. Must be one of 'production' or 'staging'"
            exit 1
            ;;
        esac
